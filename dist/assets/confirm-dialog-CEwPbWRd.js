import{_ as x,r as l,j as t,S as J,ax as K,e as Q,x as n,f as U,g as X,h as v,bm as A,bn as Z,bo as ee,bp as h,bq as ae,br as te,bs as se,bt as oe,bu as re,bv as le,bw as ne,bx as D,by as ie,bz as ce,a1 as y,B as de}from"./index-Z6Y3VTPb.js";/**
 * @license @tabler/icons-react v3.31.0 - MIT
 *
 * This source code is licensed under the MIT license.
 * See the LICENSE file in the root directory of this source tree.
 */var pe=x("outline","loader","IconLoader",[["path",{d:"M12 6l0 -3",key:"svg-0"}],["path",{d:"M16.25 7.75l2.15 -2.15",key:"svg-1"}],["path",{d:"M18 12l3 0",key:"svg-2"}],["path",{d:"M16.25 16.25l2.15 2.15",key:"svg-3"}],["path",{d:"M12 18l0 3",key:"svg-4"}],["path",{d:"M7.75 16.25l-2.15 2.15",key:"svg-5"}],["path",{d:"M6 12l-3 0",key:"svg-6"}],["path",{d:"M7.75 7.75l-2.15 -2.15",key:"svg-7"}]]);/**
 * @license @tabler/icons-react v3.31.0 - MIT
 *
 * This source code is licensed under the MIT license.
 * See the LICENSE file in the root directory of this source tree.
 */var Re=x("outline","trash","IconTrash",[["path",{d:"M4 7l16 0",key:"svg-0"}],["path",{d:"M10 11l0 6",key:"svg-1"}],["path",{d:"M14 11l0 6",key:"svg-2"}],["path",{d:"M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12",key:"svg-3"}],["path",{d:"M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3",key:"svg-4"}]]);function _e(e=null){const[a,s]=l.useState(e);return[a,r=>s(i=>i===r?null:r)]}function we({defaultValue:e,onValueChange:a,isPending:s,items:o,placeholder:r,disabled:i,className:p="",isControlled:m=!1}){const g=m?{value:e,onValueChange:a}:{defaultValue:e,onValueChange:a};return t.jsxs(J,{...g,children:[t.jsx(K,{children:t.jsx(Q,{disabled:i,className:n(p),children:t.jsx(U,{placeholder:r??"Select"})})}),t.jsx(X,{children:s?t.jsx(v,{disabled:!0,value:"loading",className:"h-14",children:t.jsxs("div",{className:"flex items-center justify-center gap-2",children:[t.jsx(pe,{className:"h-5 w-5 animate-spin"}),"  ","Loading..."]})}):o==null?void 0:o.map(({label:c,value:u})=>t.jsx(v,{value:u,children:c},u))})]})}var N="AlertDialog",[ge,Me]=te(N,[A]),d=A(),j=e=>{const{__scopeAlertDialog:a,...s}=e,o=d(a);return t.jsx(Z,{...o,...s,modal:!0})};j.displayName=N;var ue="AlertDialogTrigger",fe=l.forwardRef((e,a)=>{const{__scopeAlertDialog:s,...o}=e,r=d(s);return t.jsx(ce,{...r,...o,ref:a})});fe.displayName=ue;var me="AlertDialogPortal",b=e=>{const{__scopeAlertDialog:a,...s}=e,o=d(a);return t.jsx(ee,{...o,...s})};b.displayName=me;var ve="AlertDialogOverlay",S=l.forwardRef((e,a)=>{const{__scopeAlertDialog:s,...o}=e,r=d(s);return t.jsx(ie,{...r,...o,ref:a})});S.displayName=ve;var f="AlertDialogContent",[xe,Ae]=ge(f),C=l.forwardRef((e,a)=>{const{__scopeAlertDialog:s,children:o,...r}=e,i=d(s),p=l.useRef(null),m=h(a,p),g=l.useRef(null);return t.jsx(ae,{contentName:f,titleName:R,docsSlug:"alert-dialog",children:t.jsx(xe,{scope:s,cancelRef:g,children:t.jsxs(se,{role:"alertdialog",...i,...r,ref:m,onOpenAutoFocus:oe(r.onOpenAutoFocus,c=>{var u;c.preventDefault(),(u=g.current)==null||u.focus({preventScroll:!0})}),onPointerDownOutside:c=>c.preventDefault(),onInteractOutside:c=>c.preventDefault(),children:[t.jsx(re,{children:o}),t.jsx(De,{contentRef:p})]})})})});C.displayName=f;var R="AlertDialogTitle",_=l.forwardRef((e,a)=>{const{__scopeAlertDialog:s,...o}=e,r=d(s);return t.jsx(le,{...r,...o,ref:a})});_.displayName=R;var w="AlertDialogDescription",M=l.forwardRef((e,a)=>{const{__scopeAlertDialog:s,...o}=e,r=d(s);return t.jsx(ne,{...r,...o,ref:a})});M.displayName=w;var he="AlertDialogAction",E=l.forwardRef((e,a)=>{const{__scopeAlertDialog:s,...o}=e,r=d(s);return t.jsx(D,{...r,...o,ref:a})});E.displayName=he;var T="AlertDialogCancel",O=l.forwardRef((e,a)=>{const{__scopeAlertDialog:s,...o}=e,{cancelRef:r}=Ae(T,s),i=d(s),p=h(a,r);return t.jsx(D,{...i,...o,ref:p})});O.displayName=T;var De=({contentRef:e})=>{const a=`\`${f}\` requires a description for the component to be accessible for screen reader users.

You can add a description to the \`${f}\` by passing a \`${w}\` component as a child, which also benefits sighted users by adding visible context to the dialog.

Alternatively, you can use your own component as a description by assigning it an \`id\` and passing the same value to the \`aria-describedby\` prop in \`${f}\`. If the description is confusing or duplicative for sighted users, you can use the \`@radix-ui/react-visually-hidden\` primitive as a wrapper around your description component.

For more information, see https://radix-ui.com/primitives/docs/components/alert-dialog`;return l.useEffect(()=>{var o;document.getElementById((o=e.current)==null?void 0:o.getAttribute("aria-describedby"))||console.warn(a)},[a,e]),null},ye=j,Ne=b,P=S,k=C,I=E,$=O,L=_,F=M;const je=ye,be=Ne,z=l.forwardRef(({className:e,...a},s)=>t.jsx(P,{className:n("fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",e),...a,ref:s}));z.displayName=P.displayName;const B=l.forwardRef(({className:e,...a},s)=>t.jsxs(be,{children:[t.jsx(z,{}),t.jsx(k,{ref:s,className:n("fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg",e),...a})]}));B.displayName=k.displayName;const G=({className:e,...a})=>t.jsx("div",{className:n("flex flex-col space-y-2 text-center sm:text-left",e),...a});G.displayName="AlertDialogHeader";const H=({className:e,...a})=>t.jsx("div",{className:n("flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2",e),...a});H.displayName="AlertDialogFooter";const q=l.forwardRef(({className:e,...a},s)=>t.jsx(L,{ref:s,className:n("text-lg font-semibold",e),...a}));q.displayName=L.displayName;const W=l.forwardRef(({className:e,...a},s)=>t.jsx(F,{ref:s,className:n("text-sm text-muted-foreground",e),...a}));W.displayName=F.displayName;const Se=l.forwardRef(({className:e,...a},s)=>t.jsx(I,{ref:s,className:n(y(),e),...a}));Se.displayName=I.displayName;const Y=l.forwardRef(({className:e,...a},s)=>t.jsx($,{ref:s,className:n(y({variant:"outline"}),"mt-2 sm:mt-0",e),...a}));Y.displayName=$.displayName;function Ee(e){const{title:a,desc:s,children:o,className:r,confirmText:i,cancelBtnText:p,destructive:m,isLoading:g,disabled:c=!1,handleConfirm:u,...V}=e;return t.jsx(je,{...V,children:t.jsxs(B,{className:n(r&&r),children:[t.jsxs(G,{className:"text-left",children:[t.jsx(q,{children:a}),t.jsx(W,{asChild:!0,children:t.jsx("div",{children:s})})]}),o,t.jsxs(H,{children:[t.jsx(Y,{disabled:g,children:p??"Cancel"}),t.jsx(de,{variant:m?"destructive":"default",onClick:u,disabled:c||g,children:i??"Continue"})]})]})})}export{Ee as C,Re as I,we as S,_e as u};
