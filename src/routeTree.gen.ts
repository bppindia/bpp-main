/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PublicImport } from './routes/_public'
import { Route as DashboardRouteImport } from './routes/dashboard/route'
import { Route as IndexImport } from './routes/index'
import { Route as DashboardIndexImport } from './routes/dashboard/index'
import { Route as authSignInImport } from './routes/(auth)/sign-in'
import { Route as auth500Import } from './routes/(auth)/500'
import { Route as DashboardWalletIndexImport } from './routes/dashboard/wallet/index'
import { Route as DashboardReferralIndexImport } from './routes/dashboard/referral/index'
import { Route as DashboardProfileIndexImport } from './routes/dashboard/profile/index'
import { Route as DashboardProfessionalProfileIndexImport } from './routes/dashboard/professional-profile/index'
import { Route as DashboardMembershipIndexImport } from './routes/dashboard/membership/index'
import { Route as DashboardGoalIndexImport } from './routes/dashboard/goal/index'
import { Route as DashboardEventsIndexImport } from './routes/dashboard/events/index'
import { Route as DashboardDonateIndexImport } from './routes/dashboard/donate/index'
import { Route as DashboardCommunityContributionIndexImport } from './routes/dashboard/community-contribution/index'
import { Route as DashboardCampaignsIndexImport } from './routes/dashboard/campaigns/index'
import { Route as DashboardBusinessCommunityIndexImport } from './routes/dashboard/business-community/index'
import { Route as PublicTermsAndConditionsIndexImport } from './routes/_public/terms-and-conditions/index'
import { Route as PublicPrivacyPolicyIndexImport } from './routes/_public/privacy-policy/index'
import { Route as PublicDownloadAppIndexImport } from './routes/_public/download-app/index'
import { Route as PublicContactIndexImport } from './routes/_public/contact/index'
import { Route as PublicAboutIndexImport } from './routes/_public/about/index'
import { Route as DashboardWalletTransactionsIndexImport } from './routes/dashboard/wallet/transactions/index'
import { Route as DashboardWalletAddFundIndexImport } from './routes/dashboard/wallet/add-fund/index'
import { Route as DashboardMembershipRenewalIndexImport } from './routes/dashboard/membership/renewal/index'
import { Route as DashboardMembershipPaymentIndexImport } from './routes/dashboard/membership/payment/index'
import { Route as DashboardDonateAddDonationIndexImport } from './routes/dashboard/donate/add-donation/index'
import { Route as PublicMembershipWingsIndexImport } from './routes/_public/membership/wings/index'
import { Route as PublicMembershipUpgradeRenewalsIndexImport } from './routes/_public/membership/upgrade-renewals/index'
import { Route as PublicMembershipPrivilegesIndexImport } from './routes/_public/membership/privileges/index'
import { Route as PublicMembershipFaqIndexImport } from './routes/_public/membership/faq/index'
import { Route as PublicMembershipComplaintsIndexImport } from './routes/_public/membership/complaints/index'
import { Route as PublicMembershipCodeOfConductIndexImport } from './routes/_public/membership/code-of-conduct/index'
import { Route as PublicCommunityContributionIntroductionIndexImport } from './routes/_public/community-contribution/introduction/index'
import { Route as PublicCommunityContributionHowItWorksIndexImport } from './routes/_public/community-contribution/how-it-works/index'
import { Route as PublicBusinessCommunityVendorSuppliersIndexImport } from './routes/_public/business-community/vendor-suppliers/index'
import { Route as PublicBusinessCommunityInclusionIndexImport } from './routes/_public/business-community/inclusion/index'
import { Route as PublicBusinessCommunityEthicsIndexImport } from './routes/_public/business-community/ethics/index'
import { Route as PublicBusinessCommunityDisclosureIndexImport } from './routes/_public/business-community/disclosure/index'
import { Route as PublicAboutVolunteerIndexImport } from './routes/_public/about/volunteer/index'
import { Route as PublicAboutLogoMediaRequestIndexImport } from './routes/_public/about/logo-media-request/index'
import { Route as PublicAboutGetToKnowBppIndexImport } from './routes/_public/about/get-to-know-bpp/index'
import { Route as PublicAboutCommitmentProgressIndexImport } from './routes/_public/about/commitment-progress/index'
import { Route as PublicAboutBppGoalsIndexImport } from './routes/_public/about/bpp-goals/index'
import { Route as PublicAboutBppGoalsNationalIntegrityIndexImport } from './routes/_public/about/bpp-goals/national-integrity/index'
import { Route as PublicAboutBppGoalsGoodHealthAndWellBeingIndexImport } from './routes/_public/about/bpp-goals/good-health-and-well-being/index'
import { Route as PublicAboutBppGoalsEqualOpportunityAndGenderEqualityIndexImport } from './routes/_public/about/bpp-goals/equal-opportunity-and-gender-equality/index'

// Create Virtual Routes

const errors503LazyImport = createFileRoute('/(errors)/503')()
const errors500LazyImport = createFileRoute('/(errors)/500')()
const errors404LazyImport = createFileRoute('/(errors)/404')()
const errors403LazyImport = createFileRoute('/(errors)/403')()
const errors401LazyImport = createFileRoute('/(errors)/401')()
const authSignUpLazyImport = createFileRoute('/(auth)/sign-up')()
const authForgotPasswordLazyImport = createFileRoute(
  '/(auth)/forgot-password',
)()
const DashboardSettingsRouteLazyImport = createFileRoute(
  '/dashboard/settings',
)()
const DashboardUsersIndexLazyImport = createFileRoute('/dashboard/users/')()
const DashboardTasksIndexLazyImport = createFileRoute('/dashboard/tasks/')()
const DashboardSettingsIndexLazyImport = createFileRoute(
  '/dashboard/settings/',
)()
const DashboardHelpCenterIndexLazyImport = createFileRoute(
  '/dashboard/help-center/',
)()
const DashboardChatsIndexLazyImport = createFileRoute('/dashboard/chats/')()
const DashboardAppsIndexLazyImport = createFileRoute('/dashboard/apps/')()
const DashboardSettingsNotificationsLazyImport = createFileRoute(
  '/dashboard/settings/notifications',
)()
const DashboardSettingsDisplayLazyImport = createFileRoute(
  '/dashboard/settings/display',
)()
const DashboardSettingsAppearanceLazyImport = createFileRoute(
  '/dashboard/settings/appearance',
)()
const DashboardSettingsAccountLazyImport = createFileRoute(
  '/dashboard/settings/account',
)()

// Create/Update Routes

const PublicRoute = PublicImport.update({
  id: '/_public',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRouteRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const errors503LazyRoute = errors503LazyImport
  .update({
    id: '/(errors)/503',
    path: '/503',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/503.lazy').then((d) => d.Route))

const errors500LazyRoute = errors500LazyImport
  .update({
    id: '/(errors)/500',
    path: '/500',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/500.lazy').then((d) => d.Route))

const errors404LazyRoute = errors404LazyImport
  .update({
    id: '/(errors)/404',
    path: '/404',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/404.lazy').then((d) => d.Route))

const errors403LazyRoute = errors403LazyImport
  .update({
    id: '/(errors)/403',
    path: '/403',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/403.lazy').then((d) => d.Route))

const errors401LazyRoute = errors401LazyImport
  .update({
    id: '/(errors)/401',
    path: '/401',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/401.lazy').then((d) => d.Route))

const authSignUpLazyRoute = authSignUpLazyImport
  .update({
    id: '/(auth)/sign-up',
    path: '/sign-up',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(auth)/sign-up.lazy').then((d) => d.Route))

const authForgotPasswordLazyRoute = authForgotPasswordLazyImport
  .update({
    id: '/(auth)/forgot-password',
    path: '/forgot-password',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() =>
    import('./routes/(auth)/forgot-password.lazy').then((d) => d.Route),
  )

const DashboardSettingsRouteLazyRoute = DashboardSettingsRouteLazyImport.update(
  {
    id: '/settings',
    path: '/settings',
    getParentRoute: () => DashboardRouteRoute,
  } as any,
).lazy(() =>
  import('./routes/dashboard/settings/route.lazy').then((d) => d.Route),
)

const authSignInRoute = authSignInImport.update({
  id: '/(auth)/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const auth500Route = auth500Import.update({
  id: '/(auth)/500',
  path: '/500',
  getParentRoute: () => rootRoute,
} as any)

const DashboardUsersIndexLazyRoute = DashboardUsersIndexLazyImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => DashboardRouteRoute,
} as any).lazy(() =>
  import('./routes/dashboard/users/index.lazy').then((d) => d.Route),
)

const DashboardTasksIndexLazyRoute = DashboardTasksIndexLazyImport.update({
  id: '/tasks/',
  path: '/tasks/',
  getParentRoute: () => DashboardRouteRoute,
} as any).lazy(() =>
  import('./routes/dashboard/tasks/index.lazy').then((d) => d.Route),
)

const DashboardSettingsIndexLazyRoute = DashboardSettingsIndexLazyImport.update(
  {
    id: '/',
    path: '/',
    getParentRoute: () => DashboardSettingsRouteLazyRoute,
  } as any,
).lazy(() =>
  import('./routes/dashboard/settings/index.lazy').then((d) => d.Route),
)

const DashboardHelpCenterIndexLazyRoute =
  DashboardHelpCenterIndexLazyImport.update({
    id: '/help-center/',
    path: '/help-center/',
    getParentRoute: () => DashboardRouteRoute,
  } as any).lazy(() =>
    import('./routes/dashboard/help-center/index.lazy').then((d) => d.Route),
  )

const DashboardChatsIndexLazyRoute = DashboardChatsIndexLazyImport.update({
  id: '/chats/',
  path: '/chats/',
  getParentRoute: () => DashboardRouteRoute,
} as any).lazy(() =>
  import('./routes/dashboard/chats/index.lazy').then((d) => d.Route),
)

const DashboardAppsIndexLazyRoute = DashboardAppsIndexLazyImport.update({
  id: '/apps/',
  path: '/apps/',
  getParentRoute: () => DashboardRouteRoute,
} as any).lazy(() =>
  import('./routes/dashboard/apps/index.lazy').then((d) => d.Route),
)

const DashboardWalletIndexRoute = DashboardWalletIndexImport.update({
  id: '/wallet/',
  path: '/wallet/',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardReferralIndexRoute = DashboardReferralIndexImport.update({
  id: '/referral/',
  path: '/referral/',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardProfileIndexRoute = DashboardProfileIndexImport.update({
  id: '/profile/',
  path: '/profile/',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardProfessionalProfileIndexRoute =
  DashboardProfessionalProfileIndexImport.update({
    id: '/professional-profile/',
    path: '/professional-profile/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)

const DashboardMembershipIndexRoute = DashboardMembershipIndexImport.update({
  id: '/membership/',
  path: '/membership/',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardGoalIndexRoute = DashboardGoalIndexImport.update({
  id: '/goal/',
  path: '/goal/',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardEventsIndexRoute = DashboardEventsIndexImport.update({
  id: '/events/',
  path: '/events/',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardDonateIndexRoute = DashboardDonateIndexImport.update({
  id: '/donate/',
  path: '/donate/',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardCommunityContributionIndexRoute =
  DashboardCommunityContributionIndexImport.update({
    id: '/community-contribution/',
    path: '/community-contribution/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)

const DashboardCampaignsIndexRoute = DashboardCampaignsIndexImport.update({
  id: '/campaigns/',
  path: '/campaigns/',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardBusinessCommunityIndexRoute =
  DashboardBusinessCommunityIndexImport.update({
    id: '/business-community/',
    path: '/business-community/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)

const PublicTermsAndConditionsIndexRoute =
  PublicTermsAndConditionsIndexImport.update({
    id: '/terms-and-conditions/',
    path: '/terms-and-conditions/',
    getParentRoute: () => PublicRoute,
  } as any)

const PublicPrivacyPolicyIndexRoute = PublicPrivacyPolicyIndexImport.update({
  id: '/privacy-policy/',
  path: '/privacy-policy/',
  getParentRoute: () => PublicRoute,
} as any)

const PublicDownloadAppIndexRoute = PublicDownloadAppIndexImport.update({
  id: '/download-app/',
  path: '/download-app/',
  getParentRoute: () => PublicRoute,
} as any)

const PublicContactIndexRoute = PublicContactIndexImport.update({
  id: '/contact/',
  path: '/contact/',
  getParentRoute: () => PublicRoute,
} as any)

const PublicAboutIndexRoute = PublicAboutIndexImport.update({
  id: '/about/',
  path: '/about/',
  getParentRoute: () => PublicRoute,
} as any)

const DashboardSettingsNotificationsLazyRoute =
  DashboardSettingsNotificationsLazyImport.update({
    id: '/notifications',
    path: '/notifications',
    getParentRoute: () => DashboardSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/dashboard/settings/notifications.lazy').then(
      (d) => d.Route,
    ),
  )

const DashboardSettingsDisplayLazyRoute =
  DashboardSettingsDisplayLazyImport.update({
    id: '/display',
    path: '/display',
    getParentRoute: () => DashboardSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/dashboard/settings/display.lazy').then((d) => d.Route),
  )

const DashboardSettingsAppearanceLazyRoute =
  DashboardSettingsAppearanceLazyImport.update({
    id: '/appearance',
    path: '/appearance',
    getParentRoute: () => DashboardSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/dashboard/settings/appearance.lazy').then((d) => d.Route),
  )

const DashboardSettingsAccountLazyRoute =
  DashboardSettingsAccountLazyImport.update({
    id: '/account',
    path: '/account',
    getParentRoute: () => DashboardSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/dashboard/settings/account.lazy').then((d) => d.Route),
  )

const DashboardWalletTransactionsIndexRoute =
  DashboardWalletTransactionsIndexImport.update({
    id: '/wallet/transactions/',
    path: '/wallet/transactions/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)

const DashboardWalletAddFundIndexRoute =
  DashboardWalletAddFundIndexImport.update({
    id: '/wallet/add-fund/',
    path: '/wallet/add-fund/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)

const DashboardMembershipRenewalIndexRoute =
  DashboardMembershipRenewalIndexImport.update({
    id: '/membership/renewal/',
    path: '/membership/renewal/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)

const DashboardMembershipPaymentIndexRoute =
  DashboardMembershipPaymentIndexImport.update({
    id: '/membership/payment/',
    path: '/membership/payment/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)

const DashboardDonateAddDonationIndexRoute =
  DashboardDonateAddDonationIndexImport.update({
    id: '/donate/add-donation/',
    path: '/donate/add-donation/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)

const PublicMembershipWingsIndexRoute = PublicMembershipWingsIndexImport.update(
  {
    id: '/membership/wings/',
    path: '/membership/wings/',
    getParentRoute: () => PublicRoute,
  } as any,
)

const PublicMembershipUpgradeRenewalsIndexRoute =
  PublicMembershipUpgradeRenewalsIndexImport.update({
    id: '/membership/upgrade-renewals/',
    path: '/membership/upgrade-renewals/',
    getParentRoute: () => PublicRoute,
  } as any)

const PublicMembershipPrivilegesIndexRoute =
  PublicMembershipPrivilegesIndexImport.update({
    id: '/membership/privileges/',
    path: '/membership/privileges/',
    getParentRoute: () => PublicRoute,
  } as any)

const PublicMembershipFaqIndexRoute = PublicMembershipFaqIndexImport.update({
  id: '/membership/faq/',
  path: '/membership/faq/',
  getParentRoute: () => PublicRoute,
} as any)

const PublicMembershipComplaintsIndexRoute =
  PublicMembershipComplaintsIndexImport.update({
    id: '/membership/complaints/',
    path: '/membership/complaints/',
    getParentRoute: () => PublicRoute,
  } as any)

const PublicMembershipCodeOfConductIndexRoute =
  PublicMembershipCodeOfConductIndexImport.update({
    id: '/membership/code-of-conduct/',
    path: '/membership/code-of-conduct/',
    getParentRoute: () => PublicRoute,
  } as any)

const PublicCommunityContributionIntroductionIndexRoute =
  PublicCommunityContributionIntroductionIndexImport.update({
    id: '/community-contribution/introduction/',
    path: '/community-contribution/introduction/',
    getParentRoute: () => PublicRoute,
  } as any)

const PublicCommunityContributionHowItWorksIndexRoute =
  PublicCommunityContributionHowItWorksIndexImport.update({
    id: '/community-contribution/how-it-works/',
    path: '/community-contribution/how-it-works/',
    getParentRoute: () => PublicRoute,
  } as any)

const PublicBusinessCommunityVendorSuppliersIndexRoute =
  PublicBusinessCommunityVendorSuppliersIndexImport.update({
    id: '/business-community/vendor-suppliers/',
    path: '/business-community/vendor-suppliers/',
    getParentRoute: () => PublicRoute,
  } as any)

const PublicBusinessCommunityInclusionIndexRoute =
  PublicBusinessCommunityInclusionIndexImport.update({
    id: '/business-community/inclusion/',
    path: '/business-community/inclusion/',
    getParentRoute: () => PublicRoute,
  } as any)

const PublicBusinessCommunityEthicsIndexRoute =
  PublicBusinessCommunityEthicsIndexImport.update({
    id: '/business-community/ethics/',
    path: '/business-community/ethics/',
    getParentRoute: () => PublicRoute,
  } as any)

const PublicBusinessCommunityDisclosureIndexRoute =
  PublicBusinessCommunityDisclosureIndexImport.update({
    id: '/business-community/disclosure/',
    path: '/business-community/disclosure/',
    getParentRoute: () => PublicRoute,
  } as any)

const PublicAboutVolunteerIndexRoute = PublicAboutVolunteerIndexImport.update({
  id: '/about/volunteer/',
  path: '/about/volunteer/',
  getParentRoute: () => PublicRoute,
} as any)

const PublicAboutLogoMediaRequestIndexRoute =
  PublicAboutLogoMediaRequestIndexImport.update({
    id: '/about/logo-media-request/',
    path: '/about/logo-media-request/',
    getParentRoute: () => PublicRoute,
  } as any)

const PublicAboutGetToKnowBppIndexRoute =
  PublicAboutGetToKnowBppIndexImport.update({
    id: '/about/get-to-know-bpp/',
    path: '/about/get-to-know-bpp/',
    getParentRoute: () => PublicRoute,
  } as any)

const PublicAboutCommitmentProgressIndexRoute =
  PublicAboutCommitmentProgressIndexImport.update({
    id: '/about/commitment-progress/',
    path: '/about/commitment-progress/',
    getParentRoute: () => PublicRoute,
  } as any)

const PublicAboutBppGoalsIndexRoute = PublicAboutBppGoalsIndexImport.update({
  id: '/about/bpp-goals/',
  path: '/about/bpp-goals/',
  getParentRoute: () => PublicRoute,
} as any)

const PublicAboutBppGoalsNationalIntegrityIndexRoute =
  PublicAboutBppGoalsNationalIntegrityIndexImport.update({
    id: '/about/bpp-goals/national-integrity/',
    path: '/about/bpp-goals/national-integrity/',
    getParentRoute: () => PublicRoute,
  } as any)

const PublicAboutBppGoalsGoodHealthAndWellBeingIndexRoute =
  PublicAboutBppGoalsGoodHealthAndWellBeingIndexImport.update({
    id: '/about/bpp-goals/good-health-and-well-being/',
    path: '/about/bpp-goals/good-health-and-well-being/',
    getParentRoute: () => PublicRoute,
  } as any)

const PublicAboutBppGoalsEqualOpportunityAndGenderEqualityIndexRoute =
  PublicAboutBppGoalsEqualOpportunityAndGenderEqualityIndexImport.update({
    id: '/about/bpp-goals/equal-opportunity-and-gender-equality/',
    path: '/about/bpp-goals/equal-opportunity-and-gender-equality/',
    getParentRoute: () => PublicRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRoute
    }
    '/_public': {
      id: '/_public'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PublicImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/500': {
      id: '/(auth)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof auth500Import
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-in': {
      id: '/(auth)/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof authSignInImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/settings': {
      id: '/dashboard/settings'
      path: '/settings'
      fullPath: '/dashboard/settings'
      preLoaderRoute: typeof DashboardSettingsRouteLazyImport
      parentRoute: typeof DashboardRouteImport
    }
    '/(auth)/forgot-password': {
      id: '/(auth)/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authForgotPasswordLazyImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-up': {
      id: '/(auth)/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof authSignUpLazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/401': {
      id: '/(errors)/401'
      path: '/401'
      fullPath: '/401'
      preLoaderRoute: typeof errors401LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/403': {
      id: '/(errors)/403'
      path: '/403'
      fullPath: '/403'
      preLoaderRoute: typeof errors403LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/404': {
      id: '/(errors)/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof errors404LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/500': {
      id: '/(errors)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof errors500LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/503': {
      id: '/(errors)/503'
      path: '/503'
      fullPath: '/503'
      preLoaderRoute: typeof errors503LazyImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/settings/account': {
      id: '/dashboard/settings/account'
      path: '/account'
      fullPath: '/dashboard/settings/account'
      preLoaderRoute: typeof DashboardSettingsAccountLazyImport
      parentRoute: typeof DashboardSettingsRouteLazyImport
    }
    '/dashboard/settings/appearance': {
      id: '/dashboard/settings/appearance'
      path: '/appearance'
      fullPath: '/dashboard/settings/appearance'
      preLoaderRoute: typeof DashboardSettingsAppearanceLazyImport
      parentRoute: typeof DashboardSettingsRouteLazyImport
    }
    '/dashboard/settings/display': {
      id: '/dashboard/settings/display'
      path: '/display'
      fullPath: '/dashboard/settings/display'
      preLoaderRoute: typeof DashboardSettingsDisplayLazyImport
      parentRoute: typeof DashboardSettingsRouteLazyImport
    }
    '/dashboard/settings/notifications': {
      id: '/dashboard/settings/notifications'
      path: '/notifications'
      fullPath: '/dashboard/settings/notifications'
      preLoaderRoute: typeof DashboardSettingsNotificationsLazyImport
      parentRoute: typeof DashboardSettingsRouteLazyImport
    }
    '/_public/about/': {
      id: '/_public/about/'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof PublicAboutIndexImport
      parentRoute: typeof PublicImport
    }
    '/_public/contact/': {
      id: '/_public/contact/'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof PublicContactIndexImport
      parentRoute: typeof PublicImport
    }
    '/_public/download-app/': {
      id: '/_public/download-app/'
      path: '/download-app'
      fullPath: '/download-app'
      preLoaderRoute: typeof PublicDownloadAppIndexImport
      parentRoute: typeof PublicImport
    }
    '/_public/privacy-policy/': {
      id: '/_public/privacy-policy/'
      path: '/privacy-policy'
      fullPath: '/privacy-policy'
      preLoaderRoute: typeof PublicPrivacyPolicyIndexImport
      parentRoute: typeof PublicImport
    }
    '/_public/terms-and-conditions/': {
      id: '/_public/terms-and-conditions/'
      path: '/terms-and-conditions'
      fullPath: '/terms-and-conditions'
      preLoaderRoute: typeof PublicTermsAndConditionsIndexImport
      parentRoute: typeof PublicImport
    }
    '/dashboard/business-community/': {
      id: '/dashboard/business-community/'
      path: '/business-community'
      fullPath: '/dashboard/business-community'
      preLoaderRoute: typeof DashboardBusinessCommunityIndexImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/campaigns/': {
      id: '/dashboard/campaigns/'
      path: '/campaigns'
      fullPath: '/dashboard/campaigns'
      preLoaderRoute: typeof DashboardCampaignsIndexImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/community-contribution/': {
      id: '/dashboard/community-contribution/'
      path: '/community-contribution'
      fullPath: '/dashboard/community-contribution'
      preLoaderRoute: typeof DashboardCommunityContributionIndexImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/donate/': {
      id: '/dashboard/donate/'
      path: '/donate'
      fullPath: '/dashboard/donate'
      preLoaderRoute: typeof DashboardDonateIndexImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/events/': {
      id: '/dashboard/events/'
      path: '/events'
      fullPath: '/dashboard/events'
      preLoaderRoute: typeof DashboardEventsIndexImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/goal/': {
      id: '/dashboard/goal/'
      path: '/goal'
      fullPath: '/dashboard/goal'
      preLoaderRoute: typeof DashboardGoalIndexImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/membership/': {
      id: '/dashboard/membership/'
      path: '/membership'
      fullPath: '/dashboard/membership'
      preLoaderRoute: typeof DashboardMembershipIndexImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/professional-profile/': {
      id: '/dashboard/professional-profile/'
      path: '/professional-profile'
      fullPath: '/dashboard/professional-profile'
      preLoaderRoute: typeof DashboardProfessionalProfileIndexImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/profile/': {
      id: '/dashboard/profile/'
      path: '/profile'
      fullPath: '/dashboard/profile'
      preLoaderRoute: typeof DashboardProfileIndexImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/referral/': {
      id: '/dashboard/referral/'
      path: '/referral'
      fullPath: '/dashboard/referral'
      preLoaderRoute: typeof DashboardReferralIndexImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/wallet/': {
      id: '/dashboard/wallet/'
      path: '/wallet'
      fullPath: '/dashboard/wallet'
      preLoaderRoute: typeof DashboardWalletIndexImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/apps/': {
      id: '/dashboard/apps/'
      path: '/apps'
      fullPath: '/dashboard/apps'
      preLoaderRoute: typeof DashboardAppsIndexLazyImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/chats/': {
      id: '/dashboard/chats/'
      path: '/chats'
      fullPath: '/dashboard/chats'
      preLoaderRoute: typeof DashboardChatsIndexLazyImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/help-center/': {
      id: '/dashboard/help-center/'
      path: '/help-center'
      fullPath: '/dashboard/help-center'
      preLoaderRoute: typeof DashboardHelpCenterIndexLazyImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/settings/': {
      id: '/dashboard/settings/'
      path: '/'
      fullPath: '/dashboard/settings/'
      preLoaderRoute: typeof DashboardSettingsIndexLazyImport
      parentRoute: typeof DashboardSettingsRouteLazyImport
    }
    '/dashboard/tasks/': {
      id: '/dashboard/tasks/'
      path: '/tasks'
      fullPath: '/dashboard/tasks'
      preLoaderRoute: typeof DashboardTasksIndexLazyImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/users/': {
      id: '/dashboard/users/'
      path: '/users'
      fullPath: '/dashboard/users'
      preLoaderRoute: typeof DashboardUsersIndexLazyImport
      parentRoute: typeof DashboardRouteImport
    }
    '/_public/about/bpp-goals/': {
      id: '/_public/about/bpp-goals/'
      path: '/about/bpp-goals'
      fullPath: '/about/bpp-goals'
      preLoaderRoute: typeof PublicAboutBppGoalsIndexImport
      parentRoute: typeof PublicImport
    }
    '/_public/about/commitment-progress/': {
      id: '/_public/about/commitment-progress/'
      path: '/about/commitment-progress'
      fullPath: '/about/commitment-progress'
      preLoaderRoute: typeof PublicAboutCommitmentProgressIndexImport
      parentRoute: typeof PublicImport
    }
    '/_public/about/get-to-know-bpp/': {
      id: '/_public/about/get-to-know-bpp/'
      path: '/about/get-to-know-bpp'
      fullPath: '/about/get-to-know-bpp'
      preLoaderRoute: typeof PublicAboutGetToKnowBppIndexImport
      parentRoute: typeof PublicImport
    }
    '/_public/about/logo-media-request/': {
      id: '/_public/about/logo-media-request/'
      path: '/about/logo-media-request'
      fullPath: '/about/logo-media-request'
      preLoaderRoute: typeof PublicAboutLogoMediaRequestIndexImport
      parentRoute: typeof PublicImport
    }
    '/_public/about/volunteer/': {
      id: '/_public/about/volunteer/'
      path: '/about/volunteer'
      fullPath: '/about/volunteer'
      preLoaderRoute: typeof PublicAboutVolunteerIndexImport
      parentRoute: typeof PublicImport
    }
    '/_public/business-community/disclosure/': {
      id: '/_public/business-community/disclosure/'
      path: '/business-community/disclosure'
      fullPath: '/business-community/disclosure'
      preLoaderRoute: typeof PublicBusinessCommunityDisclosureIndexImport
      parentRoute: typeof PublicImport
    }
    '/_public/business-community/ethics/': {
      id: '/_public/business-community/ethics/'
      path: '/business-community/ethics'
      fullPath: '/business-community/ethics'
      preLoaderRoute: typeof PublicBusinessCommunityEthicsIndexImport
      parentRoute: typeof PublicImport
    }
    '/_public/business-community/inclusion/': {
      id: '/_public/business-community/inclusion/'
      path: '/business-community/inclusion'
      fullPath: '/business-community/inclusion'
      preLoaderRoute: typeof PublicBusinessCommunityInclusionIndexImport
      parentRoute: typeof PublicImport
    }
    '/_public/business-community/vendor-suppliers/': {
      id: '/_public/business-community/vendor-suppliers/'
      path: '/business-community/vendor-suppliers'
      fullPath: '/business-community/vendor-suppliers'
      preLoaderRoute: typeof PublicBusinessCommunityVendorSuppliersIndexImport
      parentRoute: typeof PublicImport
    }
    '/_public/community-contribution/how-it-works/': {
      id: '/_public/community-contribution/how-it-works/'
      path: '/community-contribution/how-it-works'
      fullPath: '/community-contribution/how-it-works'
      preLoaderRoute: typeof PublicCommunityContributionHowItWorksIndexImport
      parentRoute: typeof PublicImport
    }
    '/_public/community-contribution/introduction/': {
      id: '/_public/community-contribution/introduction/'
      path: '/community-contribution/introduction'
      fullPath: '/community-contribution/introduction'
      preLoaderRoute: typeof PublicCommunityContributionIntroductionIndexImport
      parentRoute: typeof PublicImport
    }
    '/_public/membership/code-of-conduct/': {
      id: '/_public/membership/code-of-conduct/'
      path: '/membership/code-of-conduct'
      fullPath: '/membership/code-of-conduct'
      preLoaderRoute: typeof PublicMembershipCodeOfConductIndexImport
      parentRoute: typeof PublicImport
    }
    '/_public/membership/complaints/': {
      id: '/_public/membership/complaints/'
      path: '/membership/complaints'
      fullPath: '/membership/complaints'
      preLoaderRoute: typeof PublicMembershipComplaintsIndexImport
      parentRoute: typeof PublicImport
    }
    '/_public/membership/faq/': {
      id: '/_public/membership/faq/'
      path: '/membership/faq'
      fullPath: '/membership/faq'
      preLoaderRoute: typeof PublicMembershipFaqIndexImport
      parentRoute: typeof PublicImport
    }
    '/_public/membership/privileges/': {
      id: '/_public/membership/privileges/'
      path: '/membership/privileges'
      fullPath: '/membership/privileges'
      preLoaderRoute: typeof PublicMembershipPrivilegesIndexImport
      parentRoute: typeof PublicImport
    }
    '/_public/membership/upgrade-renewals/': {
      id: '/_public/membership/upgrade-renewals/'
      path: '/membership/upgrade-renewals'
      fullPath: '/membership/upgrade-renewals'
      preLoaderRoute: typeof PublicMembershipUpgradeRenewalsIndexImport
      parentRoute: typeof PublicImport
    }
    '/_public/membership/wings/': {
      id: '/_public/membership/wings/'
      path: '/membership/wings'
      fullPath: '/membership/wings'
      preLoaderRoute: typeof PublicMembershipWingsIndexImport
      parentRoute: typeof PublicImport
    }
    '/dashboard/donate/add-donation/': {
      id: '/dashboard/donate/add-donation/'
      path: '/donate/add-donation'
      fullPath: '/dashboard/donate/add-donation'
      preLoaderRoute: typeof DashboardDonateAddDonationIndexImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/membership/payment/': {
      id: '/dashboard/membership/payment/'
      path: '/membership/payment'
      fullPath: '/dashboard/membership/payment'
      preLoaderRoute: typeof DashboardMembershipPaymentIndexImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/membership/renewal/': {
      id: '/dashboard/membership/renewal/'
      path: '/membership/renewal'
      fullPath: '/dashboard/membership/renewal'
      preLoaderRoute: typeof DashboardMembershipRenewalIndexImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/wallet/add-fund/': {
      id: '/dashboard/wallet/add-fund/'
      path: '/wallet/add-fund'
      fullPath: '/dashboard/wallet/add-fund'
      preLoaderRoute: typeof DashboardWalletAddFundIndexImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/wallet/transactions/': {
      id: '/dashboard/wallet/transactions/'
      path: '/wallet/transactions'
      fullPath: '/dashboard/wallet/transactions'
      preLoaderRoute: typeof DashboardWalletTransactionsIndexImport
      parentRoute: typeof DashboardRouteImport
    }
    '/_public/about/bpp-goals/equal-opportunity-and-gender-equality/': {
      id: '/_public/about/bpp-goals/equal-opportunity-and-gender-equality/'
      path: '/about/bpp-goals/equal-opportunity-and-gender-equality'
      fullPath: '/about/bpp-goals/equal-opportunity-and-gender-equality'
      preLoaderRoute: typeof PublicAboutBppGoalsEqualOpportunityAndGenderEqualityIndexImport
      parentRoute: typeof PublicImport
    }
    '/_public/about/bpp-goals/good-health-and-well-being/': {
      id: '/_public/about/bpp-goals/good-health-and-well-being/'
      path: '/about/bpp-goals/good-health-and-well-being'
      fullPath: '/about/bpp-goals/good-health-and-well-being'
      preLoaderRoute: typeof PublicAboutBppGoalsGoodHealthAndWellBeingIndexImport
      parentRoute: typeof PublicImport
    }
    '/_public/about/bpp-goals/national-integrity/': {
      id: '/_public/about/bpp-goals/national-integrity/'
      path: '/about/bpp-goals/national-integrity'
      fullPath: '/about/bpp-goals/national-integrity'
      preLoaderRoute: typeof PublicAboutBppGoalsNationalIntegrityIndexImport
      parentRoute: typeof PublicImport
    }
  }
}

// Create and export the route tree

interface DashboardSettingsRouteLazyRouteChildren {
  DashboardSettingsAccountLazyRoute: typeof DashboardSettingsAccountLazyRoute
  DashboardSettingsAppearanceLazyRoute: typeof DashboardSettingsAppearanceLazyRoute
  DashboardSettingsDisplayLazyRoute: typeof DashboardSettingsDisplayLazyRoute
  DashboardSettingsNotificationsLazyRoute: typeof DashboardSettingsNotificationsLazyRoute
  DashboardSettingsIndexLazyRoute: typeof DashboardSettingsIndexLazyRoute
}

const DashboardSettingsRouteLazyRouteChildren: DashboardSettingsRouteLazyRouteChildren =
  {
    DashboardSettingsAccountLazyRoute: DashboardSettingsAccountLazyRoute,
    DashboardSettingsAppearanceLazyRoute: DashboardSettingsAppearanceLazyRoute,
    DashboardSettingsDisplayLazyRoute: DashboardSettingsDisplayLazyRoute,
    DashboardSettingsNotificationsLazyRoute:
      DashboardSettingsNotificationsLazyRoute,
    DashboardSettingsIndexLazyRoute: DashboardSettingsIndexLazyRoute,
  }

const DashboardSettingsRouteLazyRouteWithChildren =
  DashboardSettingsRouteLazyRoute._addFileChildren(
    DashboardSettingsRouteLazyRouteChildren,
  )

interface DashboardRouteRouteChildren {
  DashboardSettingsRouteLazyRoute: typeof DashboardSettingsRouteLazyRouteWithChildren
  DashboardIndexRoute: typeof DashboardIndexRoute
  DashboardBusinessCommunityIndexRoute: typeof DashboardBusinessCommunityIndexRoute
  DashboardCampaignsIndexRoute: typeof DashboardCampaignsIndexRoute
  DashboardCommunityContributionIndexRoute: typeof DashboardCommunityContributionIndexRoute
  DashboardDonateIndexRoute: typeof DashboardDonateIndexRoute
  DashboardEventsIndexRoute: typeof DashboardEventsIndexRoute
  DashboardGoalIndexRoute: typeof DashboardGoalIndexRoute
  DashboardMembershipIndexRoute: typeof DashboardMembershipIndexRoute
  DashboardProfessionalProfileIndexRoute: typeof DashboardProfessionalProfileIndexRoute
  DashboardProfileIndexRoute: typeof DashboardProfileIndexRoute
  DashboardReferralIndexRoute: typeof DashboardReferralIndexRoute
  DashboardWalletIndexRoute: typeof DashboardWalletIndexRoute
  DashboardAppsIndexLazyRoute: typeof DashboardAppsIndexLazyRoute
  DashboardChatsIndexLazyRoute: typeof DashboardChatsIndexLazyRoute
  DashboardHelpCenterIndexLazyRoute: typeof DashboardHelpCenterIndexLazyRoute
  DashboardTasksIndexLazyRoute: typeof DashboardTasksIndexLazyRoute
  DashboardUsersIndexLazyRoute: typeof DashboardUsersIndexLazyRoute
  DashboardDonateAddDonationIndexRoute: typeof DashboardDonateAddDonationIndexRoute
  DashboardMembershipPaymentIndexRoute: typeof DashboardMembershipPaymentIndexRoute
  DashboardMembershipRenewalIndexRoute: typeof DashboardMembershipRenewalIndexRoute
  DashboardWalletAddFundIndexRoute: typeof DashboardWalletAddFundIndexRoute
  DashboardWalletTransactionsIndexRoute: typeof DashboardWalletTransactionsIndexRoute
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardSettingsRouteLazyRoute: DashboardSettingsRouteLazyRouteWithChildren,
  DashboardIndexRoute: DashboardIndexRoute,
  DashboardBusinessCommunityIndexRoute: DashboardBusinessCommunityIndexRoute,
  DashboardCampaignsIndexRoute: DashboardCampaignsIndexRoute,
  DashboardCommunityContributionIndexRoute:
    DashboardCommunityContributionIndexRoute,
  DashboardDonateIndexRoute: DashboardDonateIndexRoute,
  DashboardEventsIndexRoute: DashboardEventsIndexRoute,
  DashboardGoalIndexRoute: DashboardGoalIndexRoute,
  DashboardMembershipIndexRoute: DashboardMembershipIndexRoute,
  DashboardProfessionalProfileIndexRoute:
    DashboardProfessionalProfileIndexRoute,
  DashboardProfileIndexRoute: DashboardProfileIndexRoute,
  DashboardReferralIndexRoute: DashboardReferralIndexRoute,
  DashboardWalletIndexRoute: DashboardWalletIndexRoute,
  DashboardAppsIndexLazyRoute: DashboardAppsIndexLazyRoute,
  DashboardChatsIndexLazyRoute: DashboardChatsIndexLazyRoute,
  DashboardHelpCenterIndexLazyRoute: DashboardHelpCenterIndexLazyRoute,
  DashboardTasksIndexLazyRoute: DashboardTasksIndexLazyRoute,
  DashboardUsersIndexLazyRoute: DashboardUsersIndexLazyRoute,
  DashboardDonateAddDonationIndexRoute: DashboardDonateAddDonationIndexRoute,
  DashboardMembershipPaymentIndexRoute: DashboardMembershipPaymentIndexRoute,
  DashboardMembershipRenewalIndexRoute: DashboardMembershipRenewalIndexRoute,
  DashboardWalletAddFundIndexRoute: DashboardWalletAddFundIndexRoute,
  DashboardWalletTransactionsIndexRoute: DashboardWalletTransactionsIndexRoute,
}

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren,
)

interface PublicRouteChildren {
  PublicAboutIndexRoute: typeof PublicAboutIndexRoute
  PublicContactIndexRoute: typeof PublicContactIndexRoute
  PublicDownloadAppIndexRoute: typeof PublicDownloadAppIndexRoute
  PublicPrivacyPolicyIndexRoute: typeof PublicPrivacyPolicyIndexRoute
  PublicTermsAndConditionsIndexRoute: typeof PublicTermsAndConditionsIndexRoute
  PublicAboutBppGoalsIndexRoute: typeof PublicAboutBppGoalsIndexRoute
  PublicAboutCommitmentProgressIndexRoute: typeof PublicAboutCommitmentProgressIndexRoute
  PublicAboutGetToKnowBppIndexRoute: typeof PublicAboutGetToKnowBppIndexRoute
  PublicAboutLogoMediaRequestIndexRoute: typeof PublicAboutLogoMediaRequestIndexRoute
  PublicAboutVolunteerIndexRoute: typeof PublicAboutVolunteerIndexRoute
  PublicBusinessCommunityDisclosureIndexRoute: typeof PublicBusinessCommunityDisclosureIndexRoute
  PublicBusinessCommunityEthicsIndexRoute: typeof PublicBusinessCommunityEthicsIndexRoute
  PublicBusinessCommunityInclusionIndexRoute: typeof PublicBusinessCommunityInclusionIndexRoute
  PublicBusinessCommunityVendorSuppliersIndexRoute: typeof PublicBusinessCommunityVendorSuppliersIndexRoute
  PublicCommunityContributionHowItWorksIndexRoute: typeof PublicCommunityContributionHowItWorksIndexRoute
  PublicCommunityContributionIntroductionIndexRoute: typeof PublicCommunityContributionIntroductionIndexRoute
  PublicMembershipCodeOfConductIndexRoute: typeof PublicMembershipCodeOfConductIndexRoute
  PublicMembershipComplaintsIndexRoute: typeof PublicMembershipComplaintsIndexRoute
  PublicMembershipFaqIndexRoute: typeof PublicMembershipFaqIndexRoute
  PublicMembershipPrivilegesIndexRoute: typeof PublicMembershipPrivilegesIndexRoute
  PublicMembershipUpgradeRenewalsIndexRoute: typeof PublicMembershipUpgradeRenewalsIndexRoute
  PublicMembershipWingsIndexRoute: typeof PublicMembershipWingsIndexRoute
  PublicAboutBppGoalsEqualOpportunityAndGenderEqualityIndexRoute: typeof PublicAboutBppGoalsEqualOpportunityAndGenderEqualityIndexRoute
  PublicAboutBppGoalsGoodHealthAndWellBeingIndexRoute: typeof PublicAboutBppGoalsGoodHealthAndWellBeingIndexRoute
  PublicAboutBppGoalsNationalIntegrityIndexRoute: typeof PublicAboutBppGoalsNationalIntegrityIndexRoute
}

const PublicRouteChildren: PublicRouteChildren = {
  PublicAboutIndexRoute: PublicAboutIndexRoute,
  PublicContactIndexRoute: PublicContactIndexRoute,
  PublicDownloadAppIndexRoute: PublicDownloadAppIndexRoute,
  PublicPrivacyPolicyIndexRoute: PublicPrivacyPolicyIndexRoute,
  PublicTermsAndConditionsIndexRoute: PublicTermsAndConditionsIndexRoute,
  PublicAboutBppGoalsIndexRoute: PublicAboutBppGoalsIndexRoute,
  PublicAboutCommitmentProgressIndexRoute:
    PublicAboutCommitmentProgressIndexRoute,
  PublicAboutGetToKnowBppIndexRoute: PublicAboutGetToKnowBppIndexRoute,
  PublicAboutLogoMediaRequestIndexRoute: PublicAboutLogoMediaRequestIndexRoute,
  PublicAboutVolunteerIndexRoute: PublicAboutVolunteerIndexRoute,
  PublicBusinessCommunityDisclosureIndexRoute:
    PublicBusinessCommunityDisclosureIndexRoute,
  PublicBusinessCommunityEthicsIndexRoute:
    PublicBusinessCommunityEthicsIndexRoute,
  PublicBusinessCommunityInclusionIndexRoute:
    PublicBusinessCommunityInclusionIndexRoute,
  PublicBusinessCommunityVendorSuppliersIndexRoute:
    PublicBusinessCommunityVendorSuppliersIndexRoute,
  PublicCommunityContributionHowItWorksIndexRoute:
    PublicCommunityContributionHowItWorksIndexRoute,
  PublicCommunityContributionIntroductionIndexRoute:
    PublicCommunityContributionIntroductionIndexRoute,
  PublicMembershipCodeOfConductIndexRoute:
    PublicMembershipCodeOfConductIndexRoute,
  PublicMembershipComplaintsIndexRoute: PublicMembershipComplaintsIndexRoute,
  PublicMembershipFaqIndexRoute: PublicMembershipFaqIndexRoute,
  PublicMembershipPrivilegesIndexRoute: PublicMembershipPrivilegesIndexRoute,
  PublicMembershipUpgradeRenewalsIndexRoute:
    PublicMembershipUpgradeRenewalsIndexRoute,
  PublicMembershipWingsIndexRoute: PublicMembershipWingsIndexRoute,
  PublicAboutBppGoalsEqualOpportunityAndGenderEqualityIndexRoute:
    PublicAboutBppGoalsEqualOpportunityAndGenderEqualityIndexRoute,
  PublicAboutBppGoalsGoodHealthAndWellBeingIndexRoute:
    PublicAboutBppGoalsGoodHealthAndWellBeingIndexRoute,
  PublicAboutBppGoalsNationalIntegrityIndexRoute:
    PublicAboutBppGoalsNationalIntegrityIndexRoute,
}

const PublicRouteWithChildren =
  PublicRoute._addFileChildren(PublicRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '': typeof PublicRouteWithChildren
  '/500': typeof errors500LazyRoute
  '/sign-in': typeof authSignInRoute
  '/dashboard/settings': typeof DashboardSettingsRouteLazyRouteWithChildren
  '/forgot-password': typeof authForgotPasswordLazyRoute
  '/sign-up': typeof authSignUpLazyRoute
  '/401': typeof errors401LazyRoute
  '/403': typeof errors403LazyRoute
  '/404': typeof errors404LazyRoute
  '/503': typeof errors503LazyRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/settings/account': typeof DashboardSettingsAccountLazyRoute
  '/dashboard/settings/appearance': typeof DashboardSettingsAppearanceLazyRoute
  '/dashboard/settings/display': typeof DashboardSettingsDisplayLazyRoute
  '/dashboard/settings/notifications': typeof DashboardSettingsNotificationsLazyRoute
  '/about': typeof PublicAboutIndexRoute
  '/contact': typeof PublicContactIndexRoute
  '/download-app': typeof PublicDownloadAppIndexRoute
  '/privacy-policy': typeof PublicPrivacyPolicyIndexRoute
  '/terms-and-conditions': typeof PublicTermsAndConditionsIndexRoute
  '/dashboard/business-community': typeof DashboardBusinessCommunityIndexRoute
  '/dashboard/campaigns': typeof DashboardCampaignsIndexRoute
  '/dashboard/community-contribution': typeof DashboardCommunityContributionIndexRoute
  '/dashboard/donate': typeof DashboardDonateIndexRoute
  '/dashboard/events': typeof DashboardEventsIndexRoute
  '/dashboard/goal': typeof DashboardGoalIndexRoute
  '/dashboard/membership': typeof DashboardMembershipIndexRoute
  '/dashboard/professional-profile': typeof DashboardProfessionalProfileIndexRoute
  '/dashboard/profile': typeof DashboardProfileIndexRoute
  '/dashboard/referral': typeof DashboardReferralIndexRoute
  '/dashboard/wallet': typeof DashboardWalletIndexRoute
  '/dashboard/apps': typeof DashboardAppsIndexLazyRoute
  '/dashboard/chats': typeof DashboardChatsIndexLazyRoute
  '/dashboard/help-center': typeof DashboardHelpCenterIndexLazyRoute
  '/dashboard/settings/': typeof DashboardSettingsIndexLazyRoute
  '/dashboard/tasks': typeof DashboardTasksIndexLazyRoute
  '/dashboard/users': typeof DashboardUsersIndexLazyRoute
  '/about/bpp-goals': typeof PublicAboutBppGoalsIndexRoute
  '/about/commitment-progress': typeof PublicAboutCommitmentProgressIndexRoute
  '/about/get-to-know-bpp': typeof PublicAboutGetToKnowBppIndexRoute
  '/about/logo-media-request': typeof PublicAboutLogoMediaRequestIndexRoute
  '/about/volunteer': typeof PublicAboutVolunteerIndexRoute
  '/business-community/disclosure': typeof PublicBusinessCommunityDisclosureIndexRoute
  '/business-community/ethics': typeof PublicBusinessCommunityEthicsIndexRoute
  '/business-community/inclusion': typeof PublicBusinessCommunityInclusionIndexRoute
  '/business-community/vendor-suppliers': typeof PublicBusinessCommunityVendorSuppliersIndexRoute
  '/community-contribution/how-it-works': typeof PublicCommunityContributionHowItWorksIndexRoute
  '/community-contribution/introduction': typeof PublicCommunityContributionIntroductionIndexRoute
  '/membership/code-of-conduct': typeof PublicMembershipCodeOfConductIndexRoute
  '/membership/complaints': typeof PublicMembershipComplaintsIndexRoute
  '/membership/faq': typeof PublicMembershipFaqIndexRoute
  '/membership/privileges': typeof PublicMembershipPrivilegesIndexRoute
  '/membership/upgrade-renewals': typeof PublicMembershipUpgradeRenewalsIndexRoute
  '/membership/wings': typeof PublicMembershipWingsIndexRoute
  '/dashboard/donate/add-donation': typeof DashboardDonateAddDonationIndexRoute
  '/dashboard/membership/payment': typeof DashboardMembershipPaymentIndexRoute
  '/dashboard/membership/renewal': typeof DashboardMembershipRenewalIndexRoute
  '/dashboard/wallet/add-fund': typeof DashboardWalletAddFundIndexRoute
  '/dashboard/wallet/transactions': typeof DashboardWalletTransactionsIndexRoute
  '/about/bpp-goals/equal-opportunity-and-gender-equality': typeof PublicAboutBppGoalsEqualOpportunityAndGenderEqualityIndexRoute
  '/about/bpp-goals/good-health-and-well-being': typeof PublicAboutBppGoalsGoodHealthAndWellBeingIndexRoute
  '/about/bpp-goals/national-integrity': typeof PublicAboutBppGoalsNationalIntegrityIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof PublicRouteWithChildren
  '/500': typeof errors500LazyRoute
  '/sign-in': typeof authSignInRoute
  '/forgot-password': typeof authForgotPasswordLazyRoute
  '/sign-up': typeof authSignUpLazyRoute
  '/401': typeof errors401LazyRoute
  '/403': typeof errors403LazyRoute
  '/404': typeof errors404LazyRoute
  '/503': typeof errors503LazyRoute
  '/dashboard': typeof DashboardIndexRoute
  '/dashboard/settings/account': typeof DashboardSettingsAccountLazyRoute
  '/dashboard/settings/appearance': typeof DashboardSettingsAppearanceLazyRoute
  '/dashboard/settings/display': typeof DashboardSettingsDisplayLazyRoute
  '/dashboard/settings/notifications': typeof DashboardSettingsNotificationsLazyRoute
  '/about': typeof PublicAboutIndexRoute
  '/contact': typeof PublicContactIndexRoute
  '/download-app': typeof PublicDownloadAppIndexRoute
  '/privacy-policy': typeof PublicPrivacyPolicyIndexRoute
  '/terms-and-conditions': typeof PublicTermsAndConditionsIndexRoute
  '/dashboard/business-community': typeof DashboardBusinessCommunityIndexRoute
  '/dashboard/campaigns': typeof DashboardCampaignsIndexRoute
  '/dashboard/community-contribution': typeof DashboardCommunityContributionIndexRoute
  '/dashboard/donate': typeof DashboardDonateIndexRoute
  '/dashboard/events': typeof DashboardEventsIndexRoute
  '/dashboard/goal': typeof DashboardGoalIndexRoute
  '/dashboard/membership': typeof DashboardMembershipIndexRoute
  '/dashboard/professional-profile': typeof DashboardProfessionalProfileIndexRoute
  '/dashboard/profile': typeof DashboardProfileIndexRoute
  '/dashboard/referral': typeof DashboardReferralIndexRoute
  '/dashboard/wallet': typeof DashboardWalletIndexRoute
  '/dashboard/apps': typeof DashboardAppsIndexLazyRoute
  '/dashboard/chats': typeof DashboardChatsIndexLazyRoute
  '/dashboard/help-center': typeof DashboardHelpCenterIndexLazyRoute
  '/dashboard/settings': typeof DashboardSettingsIndexLazyRoute
  '/dashboard/tasks': typeof DashboardTasksIndexLazyRoute
  '/dashboard/users': typeof DashboardUsersIndexLazyRoute
  '/about/bpp-goals': typeof PublicAboutBppGoalsIndexRoute
  '/about/commitment-progress': typeof PublicAboutCommitmentProgressIndexRoute
  '/about/get-to-know-bpp': typeof PublicAboutGetToKnowBppIndexRoute
  '/about/logo-media-request': typeof PublicAboutLogoMediaRequestIndexRoute
  '/about/volunteer': typeof PublicAboutVolunteerIndexRoute
  '/business-community/disclosure': typeof PublicBusinessCommunityDisclosureIndexRoute
  '/business-community/ethics': typeof PublicBusinessCommunityEthicsIndexRoute
  '/business-community/inclusion': typeof PublicBusinessCommunityInclusionIndexRoute
  '/business-community/vendor-suppliers': typeof PublicBusinessCommunityVendorSuppliersIndexRoute
  '/community-contribution/how-it-works': typeof PublicCommunityContributionHowItWorksIndexRoute
  '/community-contribution/introduction': typeof PublicCommunityContributionIntroductionIndexRoute
  '/membership/code-of-conduct': typeof PublicMembershipCodeOfConductIndexRoute
  '/membership/complaints': typeof PublicMembershipComplaintsIndexRoute
  '/membership/faq': typeof PublicMembershipFaqIndexRoute
  '/membership/privileges': typeof PublicMembershipPrivilegesIndexRoute
  '/membership/upgrade-renewals': typeof PublicMembershipUpgradeRenewalsIndexRoute
  '/membership/wings': typeof PublicMembershipWingsIndexRoute
  '/dashboard/donate/add-donation': typeof DashboardDonateAddDonationIndexRoute
  '/dashboard/membership/payment': typeof DashboardMembershipPaymentIndexRoute
  '/dashboard/membership/renewal': typeof DashboardMembershipRenewalIndexRoute
  '/dashboard/wallet/add-fund': typeof DashboardWalletAddFundIndexRoute
  '/dashboard/wallet/transactions': typeof DashboardWalletTransactionsIndexRoute
  '/about/bpp-goals/equal-opportunity-and-gender-equality': typeof PublicAboutBppGoalsEqualOpportunityAndGenderEqualityIndexRoute
  '/about/bpp-goals/good-health-and-well-being': typeof PublicAboutBppGoalsGoodHealthAndWellBeingIndexRoute
  '/about/bpp-goals/national-integrity': typeof PublicAboutBppGoalsNationalIntegrityIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/_public': typeof PublicRouteWithChildren
  '/(auth)/500': typeof auth500Route
  '/(auth)/sign-in': typeof authSignInRoute
  '/dashboard/settings': typeof DashboardSettingsRouteLazyRouteWithChildren
  '/(auth)/forgot-password': typeof authForgotPasswordLazyRoute
  '/(auth)/sign-up': typeof authSignUpLazyRoute
  '/(errors)/401': typeof errors401LazyRoute
  '/(errors)/403': typeof errors403LazyRoute
  '/(errors)/404': typeof errors404LazyRoute
  '/(errors)/500': typeof errors500LazyRoute
  '/(errors)/503': typeof errors503LazyRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/settings/account': typeof DashboardSettingsAccountLazyRoute
  '/dashboard/settings/appearance': typeof DashboardSettingsAppearanceLazyRoute
  '/dashboard/settings/display': typeof DashboardSettingsDisplayLazyRoute
  '/dashboard/settings/notifications': typeof DashboardSettingsNotificationsLazyRoute
  '/_public/about/': typeof PublicAboutIndexRoute
  '/_public/contact/': typeof PublicContactIndexRoute
  '/_public/download-app/': typeof PublicDownloadAppIndexRoute
  '/_public/privacy-policy/': typeof PublicPrivacyPolicyIndexRoute
  '/_public/terms-and-conditions/': typeof PublicTermsAndConditionsIndexRoute
  '/dashboard/business-community/': typeof DashboardBusinessCommunityIndexRoute
  '/dashboard/campaigns/': typeof DashboardCampaignsIndexRoute
  '/dashboard/community-contribution/': typeof DashboardCommunityContributionIndexRoute
  '/dashboard/donate/': typeof DashboardDonateIndexRoute
  '/dashboard/events/': typeof DashboardEventsIndexRoute
  '/dashboard/goal/': typeof DashboardGoalIndexRoute
  '/dashboard/membership/': typeof DashboardMembershipIndexRoute
  '/dashboard/professional-profile/': typeof DashboardProfessionalProfileIndexRoute
  '/dashboard/profile/': typeof DashboardProfileIndexRoute
  '/dashboard/referral/': typeof DashboardReferralIndexRoute
  '/dashboard/wallet/': typeof DashboardWalletIndexRoute
  '/dashboard/apps/': typeof DashboardAppsIndexLazyRoute
  '/dashboard/chats/': typeof DashboardChatsIndexLazyRoute
  '/dashboard/help-center/': typeof DashboardHelpCenterIndexLazyRoute
  '/dashboard/settings/': typeof DashboardSettingsIndexLazyRoute
  '/dashboard/tasks/': typeof DashboardTasksIndexLazyRoute
  '/dashboard/users/': typeof DashboardUsersIndexLazyRoute
  '/_public/about/bpp-goals/': typeof PublicAboutBppGoalsIndexRoute
  '/_public/about/commitment-progress/': typeof PublicAboutCommitmentProgressIndexRoute
  '/_public/about/get-to-know-bpp/': typeof PublicAboutGetToKnowBppIndexRoute
  '/_public/about/logo-media-request/': typeof PublicAboutLogoMediaRequestIndexRoute
  '/_public/about/volunteer/': typeof PublicAboutVolunteerIndexRoute
  '/_public/business-community/disclosure/': typeof PublicBusinessCommunityDisclosureIndexRoute
  '/_public/business-community/ethics/': typeof PublicBusinessCommunityEthicsIndexRoute
  '/_public/business-community/inclusion/': typeof PublicBusinessCommunityInclusionIndexRoute
  '/_public/business-community/vendor-suppliers/': typeof PublicBusinessCommunityVendorSuppliersIndexRoute
  '/_public/community-contribution/how-it-works/': typeof PublicCommunityContributionHowItWorksIndexRoute
  '/_public/community-contribution/introduction/': typeof PublicCommunityContributionIntroductionIndexRoute
  '/_public/membership/code-of-conduct/': typeof PublicMembershipCodeOfConductIndexRoute
  '/_public/membership/complaints/': typeof PublicMembershipComplaintsIndexRoute
  '/_public/membership/faq/': typeof PublicMembershipFaqIndexRoute
  '/_public/membership/privileges/': typeof PublicMembershipPrivilegesIndexRoute
  '/_public/membership/upgrade-renewals/': typeof PublicMembershipUpgradeRenewalsIndexRoute
  '/_public/membership/wings/': typeof PublicMembershipWingsIndexRoute
  '/dashboard/donate/add-donation/': typeof DashboardDonateAddDonationIndexRoute
  '/dashboard/membership/payment/': typeof DashboardMembershipPaymentIndexRoute
  '/dashboard/membership/renewal/': typeof DashboardMembershipRenewalIndexRoute
  '/dashboard/wallet/add-fund/': typeof DashboardWalletAddFundIndexRoute
  '/dashboard/wallet/transactions/': typeof DashboardWalletTransactionsIndexRoute
  '/_public/about/bpp-goals/equal-opportunity-and-gender-equality/': typeof PublicAboutBppGoalsEqualOpportunityAndGenderEqualityIndexRoute
  '/_public/about/bpp-goals/good-health-and-well-being/': typeof PublicAboutBppGoalsGoodHealthAndWellBeingIndexRoute
  '/_public/about/bpp-goals/national-integrity/': typeof PublicAboutBppGoalsNationalIntegrityIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | ''
    | '/500'
    | '/sign-in'
    | '/dashboard/settings'
    | '/forgot-password'
    | '/sign-up'
    | '/401'
    | '/403'
    | '/404'
    | '/503'
    | '/dashboard/'
    | '/dashboard/settings/account'
    | '/dashboard/settings/appearance'
    | '/dashboard/settings/display'
    | '/dashboard/settings/notifications'
    | '/about'
    | '/contact'
    | '/download-app'
    | '/privacy-policy'
    | '/terms-and-conditions'
    | '/dashboard/business-community'
    | '/dashboard/campaigns'
    | '/dashboard/community-contribution'
    | '/dashboard/donate'
    | '/dashboard/events'
    | '/dashboard/goal'
    | '/dashboard/membership'
    | '/dashboard/professional-profile'
    | '/dashboard/profile'
    | '/dashboard/referral'
    | '/dashboard/wallet'
    | '/dashboard/apps'
    | '/dashboard/chats'
    | '/dashboard/help-center'
    | '/dashboard/settings/'
    | '/dashboard/tasks'
    | '/dashboard/users'
    | '/about/bpp-goals'
    | '/about/commitment-progress'
    | '/about/get-to-know-bpp'
    | '/about/logo-media-request'
    | '/about/volunteer'
    | '/business-community/disclosure'
    | '/business-community/ethics'
    | '/business-community/inclusion'
    | '/business-community/vendor-suppliers'
    | '/community-contribution/how-it-works'
    | '/community-contribution/introduction'
    | '/membership/code-of-conduct'
    | '/membership/complaints'
    | '/membership/faq'
    | '/membership/privileges'
    | '/membership/upgrade-renewals'
    | '/membership/wings'
    | '/dashboard/donate/add-donation'
    | '/dashboard/membership/payment'
    | '/dashboard/membership/renewal'
    | '/dashboard/wallet/add-fund'
    | '/dashboard/wallet/transactions'
    | '/about/bpp-goals/equal-opportunity-and-gender-equality'
    | '/about/bpp-goals/good-health-and-well-being'
    | '/about/bpp-goals/national-integrity'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/500'
    | '/sign-in'
    | '/forgot-password'
    | '/sign-up'
    | '/401'
    | '/403'
    | '/404'
    | '/503'
    | '/dashboard'
    | '/dashboard/settings/account'
    | '/dashboard/settings/appearance'
    | '/dashboard/settings/display'
    | '/dashboard/settings/notifications'
    | '/about'
    | '/contact'
    | '/download-app'
    | '/privacy-policy'
    | '/terms-and-conditions'
    | '/dashboard/business-community'
    | '/dashboard/campaigns'
    | '/dashboard/community-contribution'
    | '/dashboard/donate'
    | '/dashboard/events'
    | '/dashboard/goal'
    | '/dashboard/membership'
    | '/dashboard/professional-profile'
    | '/dashboard/profile'
    | '/dashboard/referral'
    | '/dashboard/wallet'
    | '/dashboard/apps'
    | '/dashboard/chats'
    | '/dashboard/help-center'
    | '/dashboard/settings'
    | '/dashboard/tasks'
    | '/dashboard/users'
    | '/about/bpp-goals'
    | '/about/commitment-progress'
    | '/about/get-to-know-bpp'
    | '/about/logo-media-request'
    | '/about/volunteer'
    | '/business-community/disclosure'
    | '/business-community/ethics'
    | '/business-community/inclusion'
    | '/business-community/vendor-suppliers'
    | '/community-contribution/how-it-works'
    | '/community-contribution/introduction'
    | '/membership/code-of-conduct'
    | '/membership/complaints'
    | '/membership/faq'
    | '/membership/privileges'
    | '/membership/upgrade-renewals'
    | '/membership/wings'
    | '/dashboard/donate/add-donation'
    | '/dashboard/membership/payment'
    | '/dashboard/membership/renewal'
    | '/dashboard/wallet/add-fund'
    | '/dashboard/wallet/transactions'
    | '/about/bpp-goals/equal-opportunity-and-gender-equality'
    | '/about/bpp-goals/good-health-and-well-being'
    | '/about/bpp-goals/national-integrity'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/_public'
    | '/(auth)/500'
    | '/(auth)/sign-in'
    | '/dashboard/settings'
    | '/(auth)/forgot-password'
    | '/(auth)/sign-up'
    | '/(errors)/401'
    | '/(errors)/403'
    | '/(errors)/404'
    | '/(errors)/500'
    | '/(errors)/503'
    | '/dashboard/'
    | '/dashboard/settings/account'
    | '/dashboard/settings/appearance'
    | '/dashboard/settings/display'
    | '/dashboard/settings/notifications'
    | '/_public/about/'
    | '/_public/contact/'
    | '/_public/download-app/'
    | '/_public/privacy-policy/'
    | '/_public/terms-and-conditions/'
    | '/dashboard/business-community/'
    | '/dashboard/campaigns/'
    | '/dashboard/community-contribution/'
    | '/dashboard/donate/'
    | '/dashboard/events/'
    | '/dashboard/goal/'
    | '/dashboard/membership/'
    | '/dashboard/professional-profile/'
    | '/dashboard/profile/'
    | '/dashboard/referral/'
    | '/dashboard/wallet/'
    | '/dashboard/apps/'
    | '/dashboard/chats/'
    | '/dashboard/help-center/'
    | '/dashboard/settings/'
    | '/dashboard/tasks/'
    | '/dashboard/users/'
    | '/_public/about/bpp-goals/'
    | '/_public/about/commitment-progress/'
    | '/_public/about/get-to-know-bpp/'
    | '/_public/about/logo-media-request/'
    | '/_public/about/volunteer/'
    | '/_public/business-community/disclosure/'
    | '/_public/business-community/ethics/'
    | '/_public/business-community/inclusion/'
    | '/_public/business-community/vendor-suppliers/'
    | '/_public/community-contribution/how-it-works/'
    | '/_public/community-contribution/introduction/'
    | '/_public/membership/code-of-conduct/'
    | '/_public/membership/complaints/'
    | '/_public/membership/faq/'
    | '/_public/membership/privileges/'
    | '/_public/membership/upgrade-renewals/'
    | '/_public/membership/wings/'
    | '/dashboard/donate/add-donation/'
    | '/dashboard/membership/payment/'
    | '/dashboard/membership/renewal/'
    | '/dashboard/wallet/add-fund/'
    | '/dashboard/wallet/transactions/'
    | '/_public/about/bpp-goals/equal-opportunity-and-gender-equality/'
    | '/_public/about/bpp-goals/good-health-and-well-being/'
    | '/_public/about/bpp-goals/national-integrity/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren
  PublicRoute: typeof PublicRouteWithChildren
  auth500Route: typeof auth500Route
  authSignInRoute: typeof authSignInRoute
  authForgotPasswordLazyRoute: typeof authForgotPasswordLazyRoute
  authSignUpLazyRoute: typeof authSignUpLazyRoute
  errors401LazyRoute: typeof errors401LazyRoute
  errors403LazyRoute: typeof errors403LazyRoute
  errors404LazyRoute: typeof errors404LazyRoute
  errors500LazyRoute: typeof errors500LazyRoute
  errors503LazyRoute: typeof errors503LazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
  PublicRoute: PublicRouteWithChildren,
  auth500Route: auth500Route,
  authSignInRoute: authSignInRoute,
  authForgotPasswordLazyRoute: authForgotPasswordLazyRoute,
  authSignUpLazyRoute: authSignUpLazyRoute,
  errors401LazyRoute: errors401LazyRoute,
  errors403LazyRoute: errors403LazyRoute,
  errors404LazyRoute: errors404LazyRoute,
  errors500LazyRoute: errors500LazyRoute,
  errors503LazyRoute: errors503LazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/dashboard",
        "/_public",
        "/(auth)/500",
        "/(auth)/sign-in",
        "/(auth)/forgot-password",
        "/(auth)/sign-up",
        "/(errors)/401",
        "/(errors)/403",
        "/(errors)/404",
        "/(errors)/500",
        "/(errors)/503"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard/route.tsx",
      "children": [
        "/dashboard/settings",
        "/dashboard/",
        "/dashboard/business-community/",
        "/dashboard/campaigns/",
        "/dashboard/community-contribution/",
        "/dashboard/donate/",
        "/dashboard/events/",
        "/dashboard/goal/",
        "/dashboard/membership/",
        "/dashboard/professional-profile/",
        "/dashboard/profile/",
        "/dashboard/referral/",
        "/dashboard/wallet/",
        "/dashboard/apps/",
        "/dashboard/chats/",
        "/dashboard/help-center/",
        "/dashboard/tasks/",
        "/dashboard/users/",
        "/dashboard/donate/add-donation/",
        "/dashboard/membership/payment/",
        "/dashboard/membership/renewal/",
        "/dashboard/wallet/add-fund/",
        "/dashboard/wallet/transactions/"
      ]
    },
    "/_public": {
      "filePath": "_public.tsx",
      "children": [
        "/_public/about/",
        "/_public/contact/",
        "/_public/download-app/",
        "/_public/privacy-policy/",
        "/_public/terms-and-conditions/",
        "/_public/about/bpp-goals/",
        "/_public/about/commitment-progress/",
        "/_public/about/get-to-know-bpp/",
        "/_public/about/logo-media-request/",
        "/_public/about/volunteer/",
        "/_public/business-community/disclosure/",
        "/_public/business-community/ethics/",
        "/_public/business-community/inclusion/",
        "/_public/business-community/vendor-suppliers/",
        "/_public/community-contribution/how-it-works/",
        "/_public/community-contribution/introduction/",
        "/_public/membership/code-of-conduct/",
        "/_public/membership/complaints/",
        "/_public/membership/faq/",
        "/_public/membership/privileges/",
        "/_public/membership/upgrade-renewals/",
        "/_public/membership/wings/",
        "/_public/about/bpp-goals/equal-opportunity-and-gender-equality/",
        "/_public/about/bpp-goals/good-health-and-well-being/",
        "/_public/about/bpp-goals/national-integrity/"
      ]
    },
    "/(auth)/500": {
      "filePath": "(auth)/500.tsx"
    },
    "/(auth)/sign-in": {
      "filePath": "(auth)/sign-in.tsx"
    },
    "/dashboard/settings": {
      "filePath": "dashboard/settings/route.lazy.tsx",
      "parent": "/dashboard",
      "children": [
        "/dashboard/settings/account",
        "/dashboard/settings/appearance",
        "/dashboard/settings/display",
        "/dashboard/settings/notifications",
        "/dashboard/settings/"
      ]
    },
    "/(auth)/forgot-password": {
      "filePath": "(auth)/forgot-password.lazy.tsx"
    },
    "/(auth)/sign-up": {
      "filePath": "(auth)/sign-up.lazy.tsx"
    },
    "/(errors)/401": {
      "filePath": "(errors)/401.lazy.tsx"
    },
    "/(errors)/403": {
      "filePath": "(errors)/403.lazy.tsx"
    },
    "/(errors)/404": {
      "filePath": "(errors)/404.lazy.tsx"
    },
    "/(errors)/500": {
      "filePath": "(errors)/500.lazy.tsx"
    },
    "/(errors)/503": {
      "filePath": "(errors)/503.lazy.tsx"
    },
    "/dashboard/": {
      "filePath": "dashboard/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/settings/account": {
      "filePath": "dashboard/settings/account.lazy.tsx",
      "parent": "/dashboard/settings"
    },
    "/dashboard/settings/appearance": {
      "filePath": "dashboard/settings/appearance.lazy.tsx",
      "parent": "/dashboard/settings"
    },
    "/dashboard/settings/display": {
      "filePath": "dashboard/settings/display.lazy.tsx",
      "parent": "/dashboard/settings"
    },
    "/dashboard/settings/notifications": {
      "filePath": "dashboard/settings/notifications.lazy.tsx",
      "parent": "/dashboard/settings"
    },
    "/_public/about/": {
      "filePath": "_public/about/index.tsx",
      "parent": "/_public"
    },
    "/_public/contact/": {
      "filePath": "_public/contact/index.tsx",
      "parent": "/_public"
    },
    "/_public/download-app/": {
      "filePath": "_public/download-app/index.tsx",
      "parent": "/_public"
    },
    "/_public/privacy-policy/": {
      "filePath": "_public/privacy-policy/index.tsx",
      "parent": "/_public"
    },
    "/_public/terms-and-conditions/": {
      "filePath": "_public/terms-and-conditions/index.tsx",
      "parent": "/_public"
    },
    "/dashboard/business-community/": {
      "filePath": "dashboard/business-community/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/campaigns/": {
      "filePath": "dashboard/campaigns/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/community-contribution/": {
      "filePath": "dashboard/community-contribution/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/donate/": {
      "filePath": "dashboard/donate/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/events/": {
      "filePath": "dashboard/events/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/goal/": {
      "filePath": "dashboard/goal/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/membership/": {
      "filePath": "dashboard/membership/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/professional-profile/": {
      "filePath": "dashboard/professional-profile/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/profile/": {
      "filePath": "dashboard/profile/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/referral/": {
      "filePath": "dashboard/referral/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/wallet/": {
      "filePath": "dashboard/wallet/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/apps/": {
      "filePath": "dashboard/apps/index.lazy.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/chats/": {
      "filePath": "dashboard/chats/index.lazy.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/help-center/": {
      "filePath": "dashboard/help-center/index.lazy.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/settings/": {
      "filePath": "dashboard/settings/index.lazy.tsx",
      "parent": "/dashboard/settings"
    },
    "/dashboard/tasks/": {
      "filePath": "dashboard/tasks/index.lazy.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/users/": {
      "filePath": "dashboard/users/index.lazy.tsx",
      "parent": "/dashboard"
    },
    "/_public/about/bpp-goals/": {
      "filePath": "_public/about/bpp-goals/index.tsx",
      "parent": "/_public"
    },
    "/_public/about/commitment-progress/": {
      "filePath": "_public/about/commitment-progress/index.tsx",
      "parent": "/_public"
    },
    "/_public/about/get-to-know-bpp/": {
      "filePath": "_public/about/get-to-know-bpp/index.tsx",
      "parent": "/_public"
    },
    "/_public/about/logo-media-request/": {
      "filePath": "_public/about/logo-media-request/index.tsx",
      "parent": "/_public"
    },
    "/_public/about/volunteer/": {
      "filePath": "_public/about/volunteer/index.tsx",
      "parent": "/_public"
    },
    "/_public/business-community/disclosure/": {
      "filePath": "_public/business-community/disclosure/index.tsx",
      "parent": "/_public"
    },
    "/_public/business-community/ethics/": {
      "filePath": "_public/business-community/ethics/index.tsx",
      "parent": "/_public"
    },
    "/_public/business-community/inclusion/": {
      "filePath": "_public/business-community/inclusion/index.tsx",
      "parent": "/_public"
    },
    "/_public/business-community/vendor-suppliers/": {
      "filePath": "_public/business-community/vendor-suppliers/index.tsx",
      "parent": "/_public"
    },
    "/_public/community-contribution/how-it-works/": {
      "filePath": "_public/community-contribution/how-it-works/index.tsx",
      "parent": "/_public"
    },
    "/_public/community-contribution/introduction/": {
      "filePath": "_public/community-contribution/introduction/index.tsx",
      "parent": "/_public"
    },
    "/_public/membership/code-of-conduct/": {
      "filePath": "_public/membership/code-of-conduct/index.tsx",
      "parent": "/_public"
    },
    "/_public/membership/complaints/": {
      "filePath": "_public/membership/complaints/index.tsx",
      "parent": "/_public"
    },
    "/_public/membership/faq/": {
      "filePath": "_public/membership/faq/index.tsx",
      "parent": "/_public"
    },
    "/_public/membership/privileges/": {
      "filePath": "_public/membership/privileges/index.tsx",
      "parent": "/_public"
    },
    "/_public/membership/upgrade-renewals/": {
      "filePath": "_public/membership/upgrade-renewals/index.tsx",
      "parent": "/_public"
    },
    "/_public/membership/wings/": {
      "filePath": "_public/membership/wings/index.tsx",
      "parent": "/_public"
    },
    "/dashboard/donate/add-donation/": {
      "filePath": "dashboard/donate/add-donation/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/membership/payment/": {
      "filePath": "dashboard/membership/payment/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/membership/renewal/": {
      "filePath": "dashboard/membership/renewal/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/wallet/add-fund/": {
      "filePath": "dashboard/wallet/add-fund/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/wallet/transactions/": {
      "filePath": "dashboard/wallet/transactions/index.tsx",
      "parent": "/dashboard"
    },
    "/_public/about/bpp-goals/equal-opportunity-and-gender-equality/": {
      "filePath": "_public/about/bpp-goals/equal-opportunity-and-gender-equality/index.tsx",
      "parent": "/_public"
    },
    "/_public/about/bpp-goals/good-health-and-well-being/": {
      "filePath": "_public/about/bpp-goals/good-health-and-well-being/index.tsx",
      "parent": "/_public"
    },
    "/_public/about/bpp-goals/national-integrity/": {
      "filePath": "_public/about/bpp-goals/national-integrity/index.tsx",
      "parent": "/_public"
    }
  }
}
ROUTE_MANIFEST_END */
